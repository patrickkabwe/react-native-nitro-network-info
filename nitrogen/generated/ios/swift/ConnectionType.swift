///
/// ConnectionType.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

/**
 * Represents the JS union `ConnectionType`, backed by a C++ enum.
 */
public typealias ConnectionType = margelo.nitro.nitronetworkinfo.ConnectionType

public extension ConnectionType {
  /**
   * Get a ConnectionType for the given String value, or
   * return `nil` if the given value was invalid/unknown.
   */
  init?(fromString string: String) {
    switch string {
      case "unknown":
        self = .unknown
      case "ethernet":
        self = .ethernet
      case "wifi":
        self = .wifi
      case "cellular":
        self = .cellular
      default:
        return nil
    }
  }

  /**
   * Get the String value this ConnectionType represents.
   */
  var stringValue: String {
    switch self {
      case .unknown:
        return "unknown"
      case .ethernet:
        return "ethernet"
      case .wifi:
        return "wifi"
      case .cellular:
        return "cellular"
    }
  }
}
