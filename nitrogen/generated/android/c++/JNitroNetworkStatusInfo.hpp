///
/// JNitroNetworkStatusInfo.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#include <fbjni/fbjni.h>
#include "NitroNetworkStatusInfo.hpp"

#include "ConnectionType.hpp"
#include "JConnectionType.hpp"

namespace margelo::nitro::nitronetworkinfo {

  using namespace facebook;

  /**
   * The C++ JNI bridge between the C++ struct "NitroNetworkStatusInfo" and the the Kotlin data class "NitroNetworkStatusInfo".
   */
  struct JNitroNetworkStatusInfo final: public jni::JavaClass<JNitroNetworkStatusInfo> {
  public:
    static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/nitronetworkinfo/NitroNetworkStatusInfo;";

  public:
    /**
     * Convert this Java/Kotlin-based struct to the C++ struct NitroNetworkStatusInfo by copying all values to C++.
     */
    [[maybe_unused]]
    [[nodiscard]]
    NitroNetworkStatusInfo toCpp() const {
      static const auto clazz = javaClassStatic();
      static const auto fieldIsConnected = clazz->getField<jboolean>("isConnected");
      jboolean isConnected = this->getFieldValue(fieldIsConnected);
      static const auto fieldConnectionType = clazz->getField<JConnectionType>("connectionType");
      jni::local_ref<JConnectionType> connectionType = this->getFieldValue(fieldConnectionType);
      return NitroNetworkStatusInfo(
        static_cast<bool>(isConnected),
        connectionType->toCpp()
      );
    }

  public:
    /**
     * Create a Java/Kotlin-based struct by copying all values from the given C++ struct to Java.
     */
    [[maybe_unused]]
    static jni::local_ref<JNitroNetworkStatusInfo::javaobject> fromCpp(const NitroNetworkStatusInfo& value) {
      using JSignature = JNitroNetworkStatusInfo(jboolean, jni::alias_ref<JConnectionType>);
      static const auto clazz = javaClassStatic();
      static const auto create = clazz->getStaticMethod<JSignature>("fromCpp");
      return create(
        clazz,
        value.isConnected,
        JConnectionType::fromCpp(value.connectionType)
      );
    }
  };

} // namespace margelo::nitro::nitronetworkinfo
